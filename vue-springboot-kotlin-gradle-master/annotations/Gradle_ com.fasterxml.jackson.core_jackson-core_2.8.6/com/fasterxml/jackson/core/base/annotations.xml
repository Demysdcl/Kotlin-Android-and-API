<root>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser.NumberType getNumberType()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.Version version()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonToken resetInt(boolean, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserMinimalBase com.fasterxml.jackson.core.JsonParser skipChildren()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase void writeFieldName(com.fasterxml.jackson.core.SerializableString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_STRING'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase java.lang.IllegalArgumentException reportInvalidBase64Char(com.fasterxml.jackson.core.Base64Variant, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonToken resetAsNaN(java.lang.String, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_RAW'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator.Feature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonToken reset(boolean, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonToken resetFloat(boolean, int, int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase void writeRawValue(com.fasterxml.jackson.core.SerializableString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser.Feature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser.Feature)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserMinimalBase byte[] _asciiBytes(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase _textBuffer'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser overrideStdFeatures(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserMinimalBase java.lang.String _ascii(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.PrettyPrinter _constructDefaultPrettyPrinter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser disable(com.fasterxml.jackson.core.JsonParser.Feature)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserMinimalBase com.fasterxml.jackson.core.JsonParseException _constructError(java.lang.String, java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser enable(com.fasterxml.jackson.core.JsonParser.Feature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonLocation getCurrentLocation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator setFeatureMask(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase _ioContext'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase java.lang.String _asString(java.math.BigDecimal) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_BINARY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator overrideStdFeatures(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase void writeString(com.fasterxml.jackson.core.SerializableString) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_NULL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_BOOLEAN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator enable(com.fasterxml.jackson.core.JsonGenerator.Feature)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.Version version()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator.Feature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator.Feature) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase WRITE_NUMBER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonLocation getTokenLocation()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase com.fasterxml.jackson.core.JsonParser setFeatureMask(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator disable(com.fasterxml.jackson.core.JsonGenerator.Feature)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserBase ParserBase(com.fasterxml.jackson.core.io.IOContext, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.ParserMinimalBase byte[] _asciiBytes(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.base.GeneratorBase com.fasterxml.jackson.core.JsonGenerator setCodec(com.fasterxml.jackson.core.ObjectCodec)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
