<root>
    <item name='com.fasterxml.jackson.core.format.MatchStrength NO_MATCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[], int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatMatcher java.io.InputStream getDataStream()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector DataFormatDetector(java.util.Collection&lt;com.fasterxml.jackson.core.JsonFactory&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.InputAccessor.Std com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.DataFormatDetector com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.fasterxml.jackson.core.format.InputAccessor.Std Std(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
